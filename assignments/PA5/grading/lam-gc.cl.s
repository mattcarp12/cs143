# start of generated code
	.data
	.align	2
	.globl	class_nameTab
	.globl	Main_protObj
	.globl	Int_protObj
	.globl	String_protObj
	.globl	bool_const0
	.globl	bool_const1
	.globl	_int_tag
	.globl	_bool_tag
	.globl	_string_tag
_int_tag:
	.word	2
_bool_tag:
	.word	3
_string_tag:
	.word	4
	.globl	_MemMgr_INITIALIZER
_MemMgr_INITIALIZER:
	.word	_GenGC_Init
	.globl	_MemMgr_COLLECTOR
_MemMgr_COLLECTOR:
	.word	_GenGC_Collect
	.globl	_MemMgr_TEST
_MemMgr_TEST:
	.word	0
	.word	-1
str_const75:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const1
	.byte	0	
	.align	2
	.word	-1
str_const74:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const2
	.ascii	"Main"
	.byte	0	
	.align	2
	.word	-1
str_const73:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const2
	.ascii	"Term"
	.byte	0	
	.align	2
	.word	-1
str_const72:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const3
	.ascii	"App"
	.byte	0	
	.align	2
	.word	-1
str_const71:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const4
	.ascii	"Lambda"
	.byte	0	
	.align	2
	.word	-1
str_const70:
	.word	4
	.word	7
	.word	String_dispatch_table
	.word	int_const5
	.ascii	"Variable"
	.byte	0	
	.align	2
	.word	-1
str_const69:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const2
	.ascii	"Expr"
	.byte	0	
	.align	2
	.word	-1
str_const68:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"LambdaListRef"
	.byte	0	
	.align	2
	.word	-1
str_const67:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const7
	.ascii	"LambdaListNE"
	.byte	0	
	.align	2
	.word	-1
str_const66:
	.word	4
	.word	7
	.word	String_dispatch_table
	.word	int_const8
	.ascii	"LambdaList"
	.byte	0	
	.align	2
	.word	-1
str_const65:
	.word	4
	.word	7
	.word	String_dispatch_table
	.word	int_const9
	.ascii	"VarListNE"
	.byte	0	
	.align	2
	.word	-1
str_const64:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const10
	.ascii	"VarList"
	.byte	0	
	.align	2
	.word	-1
str_const63:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const4
	.ascii	"String"
	.byte	0	
	.align	2
	.word	-1
str_const62:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const2
	.ascii	"Bool"
	.byte	0	
	.align	2
	.word	-1
str_const61:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const3
	.ascii	"Int"
	.byte	0	
	.align	2
	.word	-1
str_const60:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const11
	.ascii	"IO"
	.byte	0	
	.align	2
	.word	-1
str_const59:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const4
	.ascii	"Object"
	.byte	0	
	.align	2
	.word	-1
str_const58:
	.word	4
	.word	7
	.word	String_dispatch_table
	.word	int_const8
	.ascii	"_prim_slot"
	.byte	0	
	.align	2
	.word	-1
str_const57:
	.word	4
	.word	7
	.word	String_dispatch_table
	.word	int_const9
	.ascii	"SELF_TYPE"
	.byte	0	
	.align	2
	.word	-1
str_const56:
	.word	4
	.word	7
	.word	String_dispatch_table
	.word	int_const9
	.ascii	"_no_class"
	.byte	0	
	.align	2
	.word	-1
str_const55:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"<basic class>"
	.byte	0	
	.align	2
	.word	-1
str_const54:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const10
	.ascii	"\n};\n};\n"
	.byte	0	
	.align	2
	.word	-1
str_const53:
	.word	4
	.word	11
	.word	String_dispatch_table
	.word	int_const12
	.ascii	"  main() : EvalObject {\n"
	.byte	0	
	.align	2
	.word	-1
str_const52:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"class Main {\n"
	.byte	0	
	.align	2
	.word	-1
str_const51:
	.word	4
	.word	17
	.word	String_dispatch_table
	.word	int_const13
	.ascii	"(*Generated by lam.cl (Jeff Foster, March 2000)*)\n"
	.byte	0	
	.align	2
	.word	-1
str_const50:
	.word	4
	.word	16
	.word	String_dispatch_table
	.word	int_const14
	.ascii	"\n------------------cut here------------------\n"
	.byte	0	
	.align	2
	.word	-1
str_const49:
	.word	4
	.word	10
	.word	String_dispatch_table
	.word	int_const15
	.ascii	"Generating code for "
	.byte	0	
	.align	2
	.word	-1
str_const48:
	.word	4
	.word	20
	.word	String_dispatch_table
	.word	int_const16
	.ascii	"  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n"
	.byte	0	
	.align	2
	.word	-1
str_const47:
	.word	4
	.word	19
	.word	String_dispatch_table
	.word	int_const17
	.ascii	"  init(p : Closure) : Closure {{ parent <- p; self; }};\n"
	.byte	0	
	.align	2
	.word	-1
str_const46:
	.word	4
	.word	12
	.word	String_dispatch_table
	.word	int_const18
	.ascii	"  get_x() : EvalObject { x };\n"
	.byte	0	
	.align	2
	.word	-1
str_const45:
	.word	4
	.word	14
	.word	String_dispatch_table
	.word	int_const19
	.ascii	"  get_parent() : Closure { parent };\n"
	.byte	0	
	.align	2
	.word	-1
str_const44:
	.word	4
	.word	9
	.word	String_dispatch_table
	.word	int_const20
	.ascii	"  x : EvalObject;\n"
	.byte	0	
	.align	2
	.word	-1
str_const43:
	.word	4
	.word	10
	.word	String_dispatch_table
	.word	int_const15
	.ascii	"  parent : Closure;\n"
	.byte	0	
	.align	2
	.word	-1
str_const42:
	.word	4
	.word	14
	.word	String_dispatch_table
	.word	int_const21
	.ascii	"class Closure inherits EvalObject {\n"
	.byte	0	
	.align	2
	.word	-1
str_const41:
	.word	4
	.word	16
	.word	String_dispatch_table
	.word	int_const14
	.ascii	"  eval() : EvalObject { { abort(); self; } };\n"
	.byte	0	
	.align	2
	.word	-1
str_const40:
	.word	4
	.word	12
	.word	String_dispatch_table
	.word	int_const22
	.ascii	"class EvalObject inherits IO {\n"
	.byte	0	
	.align	2
	.word	-1
str_const39:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const2
	.ascii	" =>\n"
	.byte	0	
	.align	2
	.word	-1
str_const38:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"beta-reduce: "
	.byte	0	
	.align	2
	.word	-1
str_const37:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const0
	.ascii	"z"
	.byte	0	
	.align	2
	.word	-1
str_const36:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const0
	.ascii	"y"
	.byte	0	
	.align	2
	.word	-1
str_const35:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const0
	.ascii	"x"
	.byte	0	
	.align	2
	.word	-1
str_const34:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const10
	.ascii	"  esac)"
	.byte	0	
	.align	2
	.word	-1
str_const33:
	.word	4
	.word	17
	.word	String_dispatch_table
	.word	int_const23
	.ascii	"    o : Object => { abort(); new EvalObject; };\n"
	.byte	0	
	.align	2
	.word	-1
str_const32:
	.word	4
	.word	12
	.word	String_dispatch_table
	.word	int_const22
	.ascii	"    c : Closure => c.apply(y);\n"
	.byte	0	
	.align	2
	.word	-1
str_const31:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const7
	.ascii	"  case x of\n"
	.byte	0	
	.align	2
	.word	-1
str_const30:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const2
	.ascii	" in\n"
	.byte	0	
	.align	2
	.word	-1
str_const29:
	.word	4
	.word	10
	.word	String_dispatch_table
	.word	int_const24
	.ascii	"     y : EvalObject <- "
	.byte	0	
	.align	2
	.word	-1
str_const28:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const11
	.ascii	",\n"
	.byte	0	
	.align	2
	.word	-1
str_const27:
	.word	4
	.word	10
	.word	String_dispatch_table
	.word	int_const24
	.ascii	"(let x : EvalObject <- "
	.byte	0	
	.align	2
	.word	-1
str_const26:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const11
	.ascii	"))"
	.byte	0	
	.align	2
	.word	-1
str_const25:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const3
	.ascii	")@("
	.byte	0	
	.align	2
	.word	-1
str_const24:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const11
	.ascii	"(("
	.byte	0	
	.align	2
	.word	-1
str_const23:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const3
	.ascii	"};\n"
	.byte	0	
	.align	2
	.word	-1
str_const22:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const25
	.ascii	";}};\n"
	.byte	0	
	.align	2
	.word	-1
str_const21:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const26
	.ascii	"      x <- y;\n"
	.byte	0	
	.align	2
	.word	-1
str_const20:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const4
	.byte	92
	.ascii	"n\");\n"
	.byte	0	
	.align	2
	.word	-1
str_const19:
	.word	4
	.word	13
	.word	String_dispatch_table
	.word	int_const27
	.ascii	"    { out_string(\"Applying closure "
	.byte	0	
	.align	2
	.word	-1
str_const18:
	.word	4
	.word	14
	.word	String_dispatch_table
	.word	int_const28
	.ascii	"  apply(y : EvalObject) : EvalObject {\n"
	.byte	0	
	.align	2
	.word	-1
str_const17:
	.word	4
	.word	10
	.word	String_dispatch_table
	.word	int_const15
	.ascii	" inherits Closure {\n"
	.byte	0	
	.align	2
	.word	-1
str_const16:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"class Closure"
	.byte	0	
	.align	2
	.word	-1
str_const15:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const4
	.ascii	"self))"
	.byte	0	
	.align	2
	.word	-1
str_const14:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"new Closure))"
	.byte	0	
	.align	2
	.word	-1
str_const13:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const10
	.ascii	").init("
	.byte	0	
	.align	2
	.word	-1
str_const12:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"((new Closure"
	.byte	0	
	.align	2
	.word	-1
str_const11:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const0
	.ascii	"."
	.byte	0	
	.align	2
	.word	-1
str_const10:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const0
	.byte	92
	.byte	0	
	.align	2
	.word	-1
str_const9:
	.word	4
	.word	6
	.word	String_dispatch_table
	.word	int_const10
	.ascii	"get_x()"
	.byte	0	
	.align	2
	.word	-1
str_const8:
	.word	4
	.word	11
	.word	String_dispatch_table
	.word	int_const29
	.ascii	"Error:  free occurrence of "
	.byte	0	
	.align	2
	.word	-1
str_const7:
	.word	4
	.word	8
	.word	String_dispatch_table
	.word	int_const6
	.ascii	"get_parent()."
	.byte	0	
	.align	2
	.word	-1
str_const6:
	.word	4
	.word	16
	.word	String_dispatch_table
	.word	int_const30
	.ascii	"\nError: Expr is pure virtual; can't gen_code\n"
	.byte	0	
	.align	2
	.word	-1
str_const5:
	.word	4
	.word	16
	.word	String_dispatch_table
	.word	int_const31
	.ascii	"\nError: Expr is pure virtual; can't substitute\n"
	.byte	0	
	.align	2
	.word	-1
str_const4:
	.word	4
	.word	17
	.word	String_dispatch_table
	.word	int_const23
	.ascii	"\nError: Expr is pure virtual; can't beta-reduce\n"
	.byte	0	
	.align	2
	.word	-1
str_const3:
	.word	4
	.word	16
	.word	String_dispatch_table
	.word	int_const31
	.ascii	"\nError: Expr is pure virtual; can't print self\n"
	.byte	0	
	.align	2
	.word	-1
str_const2:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const0
	.ascii	" "
	.byte	0	
	.align	2
	.word	-1
str_const1:
	.word	4
	.word	5
	.word	String_dispatch_table
	.word	int_const0
	.ascii	"\n"
	.byte	0	
	.align	2
	.word	-1
str_const0:
	.word	4
	.word	7
	.word	String_dispatch_table
	.word	int_const32
	.ascii	"./lam-gc.cl"
	.byte	0	
	.align	2
	.word	-1
int_const32:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	11
	.word	-1
int_const31:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	47
	.word	-1
int_const30:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	45
	.word	-1
int_const29:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	27
	.word	-1
int_const28:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	39
	.word	-1
int_const27:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	35
	.word	-1
int_const26:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	14
	.word	-1
int_const25:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	5
	.word	-1
int_const24:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	23
	.word	-1
int_const23:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	48
	.word	-1
int_const22:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	31
	.word	-1
int_const21:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	36
	.word	-1
int_const20:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	18
	.word	-1
int_const19:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	37
	.word	-1
int_const18:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	30
	.word	-1
int_const17:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	56
	.word	-1
int_const16:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	61
	.word	-1
int_const15:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	20
	.word	-1
int_const14:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	46
	.word	-1
int_const13:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	50
	.word	-1
int_const12:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	24
	.word	-1
int_const11:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	2
	.word	-1
int_const10:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	7
	.word	-1
int_const9:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	9
	.word	-1
int_const8:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	10
	.word	-1
int_const7:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	12
	.word	-1
int_const6:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	13
	.word	-1
int_const5:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	8
	.word	-1
int_const4:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	6
	.word	-1
int_const3:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	3
	.word	-1
int_const2:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	4
	.word	-1
int_const1:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	0
	.word	-1
int_const0:
	.word	2
	.word	4
	.word	Int_dispatch_table
	.word	1
	.word	-1
bool_const0:
	.word	3
	.word	4
	.word	Bool_dispatch_table
	.word	0
	.word	-1
bool_const1:
	.word	3
	.word	4
	.word	Bool_dispatch_table
	.word	1
	.word	-1
Object_protObj:
	.word	0
	.word	3
	.word	Object_dispatch_table
	.word	-1
IO_protObj:
	.word	1
	.word	3
	.word	IO_dispatch_table
	.word	-1
VarList_protObj:
	.word	2
	.word	3
	.word	VarList_dispatch_table
	.word	-1
VarListNE_protObj:
	.word	3
	.word	5
	.word	VarListNE_dispatch_table
	.word	0
	.word	0
	.word	-1
Expr_protObj:
	.word	4
	.word	3
	.word	Expr_dispatch_table
	.word	-1
Variable_protObj:
	.word	5
	.word	4
	.word	Variable_dispatch_table
	.word	0
	.word	-1
Lambda_protObj:
	.word	6
	.word	5
	.word	Lambda_dispatch_table
	.word	0
	.word	0
	.word	-1
App_protObj:
	.word	7
	.word	5
	.word	App_dispatch_table
	.word	0
	.word	0
	.word	-1
Term_protObj:
	.word	8
	.word	3
	.word	Term_dispatch_table
	.word	-1
Main_protObj:
	.word	9
	.word	3
	.word	Main_dispatch_table
	.word	-1
Int_protObj:
	.word	10
	.word	4
	.word	Int_dispatch_table
	.word	0
	.word	-1
Bool_protObj:
	.word	11
	.word	4
	.word	Bool_dispatch_table
	.word	0
	.word	-1
String_protObj:
	.word	12
	.word	5
	.word	String_dispatch_table
	.word	0
	.word	0
	.word	-1
LambdaList_protObj:
	.word	13
	.word	3
	.word	LambdaList_dispatch_table
	.word	-1
LambdaListNE_protObj:
	.word	14
	.word	7
	.word	LambdaListNE_dispatch_table
	.word	0
	.word	0
	.word	0
	.word	0
	.word	-1
LambdaListRef_protObj:
	.word	15
	.word	5
	.word	LambdaListRef_dispatch_table
	.word	0
	.word	0
class_nameTab:
	.word	str_const59
	.word	str_const60
	.word	str_const64
	.word	str_const65
	.word	str_const69
	.word	str_const70
	.word	str_const71
	.word	str_const72
	.word	str_const73
	.word	str_const74
	.word	str_const61
	.word	str_const62
	.word	str_const63
	.word	str_const66
	.word	str_const67
	.word	str_const68
class_objTab:
	.word	Object_protObj
	.word	Object_init
	.word	IO_protObj
	.word	IO_init
	.word	VarList_protObj
	.word	VarList_init
	.word	VarListNE_protObj
	.word	VarListNE_init
	.word	Expr_protObj
	.word	Expr_init
	.word	Variable_protObj
	.word	Variable_init
	.word	Lambda_protObj
	.word	Lambda_init
	.word	App_protObj
	.word	App_init
	.word	Term_protObj
	.word	Term_init
	.word	Main_protObj
	.word	Main_init
	.word	Int_protObj
	.word	Int_init
	.word	Bool_protObj
	.word	Bool_init
	.word	String_protObj
	.word	String_init
	.word	LambdaList_protObj
	.word	LambdaList_init
	.word	LambdaListNE_protObj
	.word	LambdaListNE_init
	.word	LambdaListRef_protObj
	.word	LambdaListRef_init
Object_dispatch_table:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
IO_dispatch_table:
	.word	IO.out_string
	.word	IO.out_int
	.word	IO.in_string
	.word	IO.in_int
VarList_dispatch_table:
	.word	VarList.isNil
	.word	VarList.head
	.word	VarList.tail
	.word	VarList.add
	.word	VarList.print
VarListNE_dispatch_table:
	.word	VarListNE.isNil
	.word	VarListNE.head
	.word	VarListNE.tail
	.word	VarListNE.init
	.word	VarListNE.print
Expr_dispatch_table:
	.word	Expr.print_self
	.word	Expr.beta
	.word	Expr.substitute
	.word	Expr.gen_code
Variable_dispatch_table:
	.word	Variable.init
	.word	Variable.print_self
	.word	Variable.beta
	.word	Variable.substitute
	.word	Variable.gen_code
Lambda_dispatch_table:
	.word	Lambda.init
	.word	Lambda.print_self
	.word	Lambda.beta
	.word	Lambda.apply
	.word	Lambda.substitute
	.word	Lambda.gen_code
	.word	Lambda.gen_closure_code
App_dispatch_table:
	.word	App.init
	.word	App.print_self
	.word	App.beta
	.word	App.substitute
	.word	App.gen_code
Term_dispatch_table:
	.word	Term.var
	.word	Term.lam
	.word	Term.app
	.word	Term.i
	.word	Term.k
	.word	Term.s
Main_dispatch_table:
	.word	Main.beta_reduce
	.word	Main.eval_class
	.word	Main.closure_class
	.word	Main.gen_code
	.word	Main.main
Int_dispatch_table:
Bool_dispatch_table:
String_dispatch_table:
	.word	String.length
	.word	String.concat
	.word	String.substr
LambdaList_dispatch_table:
	.word	LambdaList.isNil
	.word	LambdaList.headE
	.word	LambdaList.headC
	.word	LambdaList.headN
	.word	LambdaList.tail
	.word	LambdaList.add
LambdaListNE_dispatch_table:
	.word	LambdaListNE.isNil
	.word	LambdaListNE.headE
	.word	LambdaListNE.headC
	.word	LambdaListNE.headN
	.word	LambdaListNE.tail
	.word	LambdaListNE.init
LambdaListRef_dispatch_table:
	.word	LambdaListRef.isNil
	.word	LambdaListRef.headE
	.word	LambdaListRef.headC
	.word	LambdaListRef.headN
	.word	LambdaListRef.reset
	.word	LambdaListRef.add
	.word	LambdaListRef.removeHead
	.globl	heap_start
heap_start:
	.word	0
	.text
	.globl	Main_init
	.globl	Int_init
	.globl	String_init
	.globl	Bool_init
	.globl	Main.main

# end of generated code
